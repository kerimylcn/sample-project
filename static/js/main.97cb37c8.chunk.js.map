{"version":3,"sources":["Stores/StoreIdentifier.js","components/Footer/Footer.js","i18n.js","components/Navbar/Navbar.js","Pages/Home/Home.js","Pages/Contact/Contact.js","Stores/authStore.js","App.js","Stores/StoreInitializer.js","index.js"],"names":["Stores","AuthStore","inject","observer","className","resources","en","translation","tr","i18n","use","reactI18nextModule","init","lng","keySeparator","interpolation","escapeValue","Option","Select","Navbar","props","t","useState","clicked","setClicked","isModalVisible","setIsModalVisible","handleChange","value","changeLanguage","menu","onClick","e","console","log","key","authStore","setLogout","isLogin","Item","icon","UserOutlined","userInfo","email","LoginOutlined","to","wrap","Button","overlay","placement","username","type","defaultValue","language","style","width","onChange","title","visible","onOk","onCancel","footer","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setUserInfo","onFinishFailed","errorInfo","label","rules","required","message","Password","offset","htmlType","withNamespaces","countryList","id","layout","prefixSelector","noStyle","Contact","Form","useForm","form","useEffect","setFieldsValue","getFieldValue","validator","_","test","Promise","resolve","reject","Error","maxLength","addonBefore","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","country","TextArea","password","makeAutoObservable","this","App","stores","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97cb37c8.chunk.js","sourcesContent":["export default class Stores {\r\n    static AuthStore = 'authStore';\r\n}\r\n\r\n  ","import React from 'react'\r\nimport './Footer.css';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Stores from '../../Stores/StoreIdentifier';\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n           <p className=\"sticky\">Sticky Footer</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(Stores.AuthStore)(observer(Footer));\r\n","import i18n from \"i18next\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport translationEN from './assets/locales/en/translation.json';\r\nimport translationTR from './assets/locales/tr/translation.json';\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  tr:{\r\n    translation:translationTR\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(reactI18nextModule) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import React, { useState,useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox, Modal, Select,message,Menu,Space,Dropdown } from \"antd\";\r\nimport { UserOutlined , LoginOutlined} from '@ant-design/icons';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Stores from \"../../Stores/StoreIdentifier\";\r\nimport i18n from '../../i18n';\r\nimport { withNamespaces } from 'react-i18next';\r\nconst { Option } = Select;\r\n\r\nfunction Navbar2(props) {\r\n  \r\n   \r\n\r\n\r\n\r\n  const {t} = props;\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  \r\n\r\n\r\n \r\n\r\n  const handleClick = () => {\r\n    setClicked(!clicked);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    props.authStore.setUserInfo(values)\r\n    setIsModalVisible(!isModalVisible);\r\n    \r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  function handleChange(value) {\r\n    i18n.changeLanguage(value);\r\n  }\r\n\r\n  function handleButtonClick(e) {\r\n    message.info('Click on left button.');\r\n    console.log('click left button', e);\r\n  }\r\n  \r\n  function handleMenuClick(e) {\r\n    \r\n    console.log('click', e);\r\n\r\n    if(e.key === \"2\" ){\r\n      props.authStore.setLogout();\r\n      console.log(props.authStore.isLogin)\r\n    }\r\n    \r\n  }\r\n  \r\n  const menu = (\r\n    <Menu onClick={handleMenuClick}>\r\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n      {props.authStore.userInfo.email}\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" icon={<LoginOutlined /> }>\r\n        {t(\"Logout\")}\r\n      </Menu.Item>\r\n      \r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"NavbarItems\">\r\n      <h1 className=\"navbar-logo\">\r\n        Sample <i className=\"fab fa-react\"></i>\r\n      </h1>\r\n      \r\n      <div className=\"menu-icon\" onClick={handleClick}>\r\n        <i className={clicked ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n      </div>\r\n      <ul className={clicked ? \"nav-menu active\" : \"nav-menu\"}>\r\n        <li>\r\n          <Link className=\"nav-links\" to=\"/\">\r\n            {t(\"home\")}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"nav-links\" to=\"/contact\">\r\n            {t(\"contact\")}\r\n          </Link>\r\n        </li>\r\n\r\n        <li> \r\n          {\r\n            props.authStore.isLogin === true? (\r\n              <Space wrap>\r\n              <Dropdown.Button overlay={menu} placement=\"bottomCenter\" icon={<UserOutlined />}>\r\n              {props.authStore.userInfo.username}\r\n            </Dropdown.Button>\r\n            </Space>\r\n\r\n            ):(\r\n              <Button type=\"primary\"  className=\"login-button\" onClick={showModal}>\r\n            {t(\"login\")}\r\n          </Button>\r\n            )\r\n          }\r\n        </li>\r\n        <li>\r\n        <Select defaultValue=\"en\" value={i18n.language} className=\"login-button\" style={{ width: 75 }} onChange={handleChange}>\r\n      <Option value=\"en\">EN</Option>\r\n      <Option value=\"tr\">TR</Option>\r\n    </Select>\r\n\r\n        </li>\r\n      </ul>\r\n      \r\n      <Modal\r\n        title={t(\"login\")}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label={t(\"title\")}\r\n            name=\"title\"\r\n            rules={[{ required: true, message: t(\"Please input your title!\")}]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          \r\n          <Form.Item\r\n            label={t(\"Username\")}\r\n            name=\"username\"\r\n            rules={[{ required: true, message: t(\"Please input your username!\") }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label={t(\"Password\")}\r\n            name=\"password\"\r\n            rules={[{ required: true, message: t(\"Please input your password!\") }]}\r\n            className=\"input-password\"\r\n          >\r\n            <Input.Password className=\"input-password\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={\"email\"}\r\n            label=\"Email\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                required: true,\r\n                message: t(\"Please input your e-mail!\"),\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n         \r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {t(\"Submit\")}\r\n            </Button>\r\n          </Form.Item>\r\n          <Select defaultValue=\"en\" value={i18n.language} className=\"login-button\" style={{ width: 75 }} onChange={handleChange}>\r\n      <Option value=\"en\">EN</Option>\r\n      <Option value=\"tr\">TR</Option>\r\n    </Select>\r\n        </Form>\r\n      </Modal>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst Navbar = inject(Stores.AuthStore)(observer(Navbar2));\r\n\r\nexport default withNamespaces()(Navbar);\r\n","import React from 'react'\r\nimport './Home.css';\r\nimport { withNamespaces } from 'react-i18next';\r\n\r\n\r\n function Home(props) {\r\n \r\n     const { t } = props;\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"title\">{t(\"title\")} </h1>\r\n           <p className=\"lorem-text\">{t(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\")}</p>\r\n           <p className=\"lorem-text\">{t(\"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum et Malorum (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, Lorem ipsum dolor sit amet.., comes from a line in section 1.10.32.\")}</p>\r\n           \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default withNamespaces()(Home);\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Input, InputNumber, Button, Select, Cascader } from \"antd\";\r\nimport \"./Contact.css\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Stores from \"../../Stores/StoreIdentifier\";\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nconst { Option } = Select;\r\nconst countryList = [\r\n  { id: \"TR\", name: \"Turkey\" },\r\n  { id: \"US\", name: \"United States of America\" },\r\n  { id: \"GB\", name: \"United Kingdom\" },\r\n  { id: \"DE\", name: \"Germany\" },\r\n  { id: \"SE\", name: \"Sweden\" },\r\n  { id: \"KE\", name: \"Kenya\" },\r\n  { id: \"BR\", name: \"Brazil\" },\r\n  { id: \"ZW\", name: \"Zimbabwe\" },\r\n];\r\n\r\n\r\nfunction phoneIsValid(str) {\r\n  var isPhone = /^(1\\s|1|)?(((\\d{3}))|\\d{3})(-|\\s)?(\\d{3})(-|\\s)?(\\d{4})$/.test(str);\r\n  return isPhone;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\n\r\nconst onFinish = (values) => {\r\n  console.log(values);\r\n};\r\n\r\nconst prefixSelector = (\r\n  <Form.Item name=\"prefix\" noStyle>\r\n    <Select\r\n      style={{\r\n        width: 70,\r\n      }}\r\n    >\r\n      <Option value=\"90\">+90</Option>\r\n    </Select>\r\n  </Form.Item>\r\n);\r\n\r\nfunction Contact2(props) {\r\n  const { t } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      email: props.authStore.userInfo.email,\r\n      name: props.authStore.userInfo.username,\r\n    }\r\n    );\r\n    if (!props.authStore.isLogin){\r\n      form.setFieldsValue({\r\n        email: \"\",\r\n        name:\"\"\r\n      });\r\n    }\r\n  }, [props.authStore.isLogin]);\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h3 className=\"contact-header\">{t(\"Contact US\")}</h3>\r\n      <br></br>\r\n      <br></br>\r\n      <div className=\"form-wrapper\">\r\n        <Form\r\n          form={form}\r\n          className=\"form-container\"\r\n          {...layout}\r\n          name=\"nest-messages\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name={\"title\"}\r\n            label={t(\"title\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:t(\"Please input your title!\")\r\n                \r\n              \r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"name\"}\r\n            label={t(\"Name\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:t(\"Please input your name!\")\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"email\"}\r\n            label=\"Email\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                required: true,\r\n                message: t(\"Please input your e-mail!\"),\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[{  required: true, message: t('Please input your phone number!') },\r\n\r\n        ({ getFieldValue }) => ({\r\n          validator(_, value) {\r\n            //if (!value || getFieldValue('password') === value) {\r\n              //return Promise.resolve();\r\n            \r\n            if (phoneIsValid(value) ){\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error (t(\"Please enter correct phone number\")));\r\n          },\r\n        })\r\n      ]}\r\n      >\r\n        <Input maxLength={10} addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n      </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"country_code\"\r\n            label={t(\"Country\")}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: t(\"Please select your Country\"),\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder={t(\"Select a Country\")}\r\n              optionFilterProp=\"children\"\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {countryList.map((country) => {\r\n                return (\r\n                  <Option key={country.id} value={country.id}>\r\n                    {t(country.id)}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item name={\"text\"} label={t(\"Introduction\")}>\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {t(\"Submit\")}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Contact = inject(Stores.AuthStore)(observer(Contact2));\r\nexport default withNamespaces()(Contact);\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass AuthStore {\r\n  isLogin = false;\r\n  userInfo = {\r\n    title:\"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password:\"\"\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setUserInfo(value) {\r\n    this.userInfo = value;\r\n    this.isLogin = true;\r\n  }\r\n\r\n  setLogout(){\r\n    this.isLogin = false;\r\n    console.log(\"here\")\r\n  }\r\n}\r\n\r\nexport default AuthStore;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Home from \"./Pages/Home/Home\";\nimport  Contact  from \"./Pages/Contact/Contact\";\nimport { Provider } from \"mobx-react\";\nimport initializeStores from './Stores/StoreInitializer';\n\n\nfunction App() {\n  const stores = initializeStores();\n\n  return (\n    <Provider {...stores}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Footer />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/contact\">\n              <Contact />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import AuthStore from './authStore';\r\n\r\nexport default function initializeStores() {\r\n    return {\r\n      authStore:new AuthStore()\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './i18n';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}